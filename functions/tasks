#!/usr/bin/env bash

export BASHRC="${HOME}/.bash_profile"

task_install_base() {
  show_info "Installing packages and apps"
  
  # install homebrew
  /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
  export PATH="$(brew --prefix coreutils)/libexec/gnubin:/usr/local/bin:/usr/local/sbin:${PATH}"
  
  # Configure homebrew permissions to allow multiple users on MAC OSX.
  # Any user from the admin group will be able to manage the homebrew and cask installation on the machine.
  
  show_info "allow admins to manage homebrew's local install directory"
  sudo chgrp -R admin $(brew --prefix)/*
  sudo chmod -R g+w $(brew --prefix)/*
  
  # allow admins to homebrew's local cache of formulae and source files
  if [ -e /Library/Caches/Homebrew ]; then
    sudo chgrp -R admin /Library/Caches/Homebrew
    sudo chmod -R g+w /Library/Caches/Homebrew
  fi
  
  brew update

  # install mac app store cli tool
  brew install mas

  open "/Applications/App Store.app";

  show_info "Mac AppStore CLI utility is broken on Mojave.
  Please install the following apps manually:
    * Xcode 
    * Copy Clip
    * Apple Configurator 2
    * Trello
    * Magnet
    * Microsoft Remote Desktop
    * CCMenu
    * Giphy Capture
    * MSG Viewer for Outlook
    * Pages
    * Color Slurp
    * Lastpass
  "
  
  read -p "Ensure you are signed in to the App Store, then hit enter. ";

  # Xcode
  # mas install 497799835

  # Copy Clip
  # mas install 595191960

  # Apple Configurator 2
  # mas install 1037126344

  # Trello
  # mas install 1278508951

  # Magnet
  # mas install 441258766

  # Microsoft Remote Desktop
  # mas install 715768417

  # CCMenu
  # mas install 603117688

  # GIPHY CAPTURE
  # mas install 668208984

  # MSG Viewer for Outlook
  # mas install 973213640

  # Pages
  # mas install 409201541

  # ColorSlurp
  # mas install 1287239339

  # LastPass
  # mas install 926036361

  sudo xcode-select --install
  sudo xcodebuild -license agree

  brew install coreutils
  brew install binutils
  ln -s /usr/bin/gcc `brew --prefix`/bin/gcc
  brew install diffutils
  brew install ed --with-default-names
  brew install findutils --with-default-names
  brew install gawk
  brew install gnu-indent --with-default-names
  brew install gnu-sed --with-default-names
  brew install gnu-tar --with-default-names
  brew install gnu-which --with-default-names
  brew install gnutls
  brew install grep --with-default-names
  brew install gzip
  brew install screen
  brew install watch
  brew install wdiff --with-gettext
  brew install wget
  brew install translate-shell
  
  brew install bash
  brew install emacs
  brew install less
  brew install m4
  brew install make
  brew install nano
  
  brew install file-formula
  brew install git
  brew install bash-completion
  brew install openssh
  brew install perl
  brew install python
  brew install rsync
  brew install svn
  brew install unzip
  brew install vim --override-system-vi
  brew install neovim
  brew install vifm
  brew install macvim --override-system-vim --custom-system-icons
  brew install zsh
  brew install htop
  brew install docker
  brew install docker-compose
  brew install brew-cask-completion  
  brew install node
  brew install ansible
  brew install rename
  
  brew cask install java8
  brew install maven
  
  brew cask install dropbox
  brew cask install google-chrome
  brew cask install google-chrome-canary
  brew cask install thunderbird
  brew cask install vagrant
  
  brew cask install webstorm
  # fix webstorm alert sound on ctrl-cmd-left/right
  mkdir -p ${HOME}/Library/KeyBindings
  (
    echo '{'
    echo '  "^@\UF701" = "noop:";'
    echo '  "^@\UF702" = "noop:";'
    echo '  "^@\UF703" = "noop:";'
    echo '  "\UF729"  = moveToBeginningOfLine:; // home'
    echo '  "\UF72B"  = moveToEndOfLine:; // end'
    echo '  "$\UF729" = moveToBeginningOfLineAndModifySelection:; // shift-home'
    echo '  "$\UF72B" = moveToEndOfLineAndModifySelection:; // shift-end'
    echo '}'

  ) >> ${HOME}/Library/KeyBindings/DefaultKeyBinding.dict
  
  brew cask install visual-studio-code
  brew cask install franz
  brew cask install virtualbox
  brew cask install docker
  brew cask install ccmenu
  brew cask install karabiner-elements
  brew cask install keyboard-maestro
  brew cask install android-sdk
  brew cask install android-studio
  brew cask install magicprefs
  brew cask install iterm2
  brew cask install spotify
  brew cask install postman
  brew cask install michaelvillar-timer  
}

task_git() {
  show_info "Setup git"
  export GIT_EMAIL="uloco@schiefewelt.de"
  git config --global user.name "$GIT_USER"
  git config --global user.email "$GIT_EMAIL"
  git config --global push.default simple
  git config --global credential.helper osxkeychain
  git config --global svn.rmdir true
  git config --global diff.tool vimdiff
  git config --global difftool.prompt false
  git config --global core.editor "vim"

  # aliases
  git config --global alias.d difftool 
  git config --global alias.b = branch
  git config --global alias.d = difftool
  git config --global alias.s = status
  git config --global alias.ss = status -s
  git config --global alias.a = add
  git config --global alias.aa = add .
  git config --global alias.ba = branch --all
  git config --global alias.co = checkout
  git config --global alias.cob = checkout -b
  git config --global alias.c = commit
  git config --global alias.cm = commit -m
  git config --global alias.cam = commit --amend -C HEAD
  git config --global alias.pu = "! git push -u origin $(git rev-parse --abbrev-ref HEAD)"
  git config --global alias.pt = push --follow-tags
  git config --global alias.r = reset
  git config --global alias.rl = reset @^
  git config --global alias.rls = reset @^ --soft
  git config --global alias.g = log --graph --pretty=format:'%C(bold)%h%Creset%C(magenta)%d%Creset %s %C(yellow)<%an> %C(cyan)(%cr)%Creset' --abbrev-commit --date=relative
  git config --global alias.gs = g --stat
  git config --global alias.l = log
  git config --global alias.ll = l --graph --pretty=oneline --abbrev-commit
  git config --global alias.d = diff
  git config --global alias.dc = d --cached
  git config --global alias.pop = stash pop
  git config --global alias.delete = push --delete origin
  git config --global alias.cleanup = "! git remote prune origin && git cleanup-branches"
  git config --global alias.sh = show
  git config --global alias.t = tag
  
  # Setup custom git scripts
  mkdir -p "${HOME}/.local/bin/"
  cp data/scripts/git-* "${HOME}/.local/bin/"
}

task_npm() {
  npm install -g \
  npm \
  vsce \
  cordova \
  ionic \
  live-server \
  typescript \
  tslint \
  tslint-config-standard >/dev/null
  
  npm list --global --depth 0
}

task_fonts() {
  show_info "Installing missing fonts."
  tar -xzvf data/source-code-pro.tar.gz
  cp -f source-code-pro/* ~/Library/Fonts/
  rm -r source-code-pro/
}

task_folders() {
  show_info "Creating default folders"
  mkdir -pv "$HOME/Source/"
  mkdir -pv "$HOME/Software"
  mkdir -pv "$HOME/tmp"
  mkdir -pv "$HOME/Workshops"
  mkdir -pv "$HOME/Virtual Machines"
}

task_settings() {
  # TODO add macos settings here

  # Fix font aliasing on Mojave
  defaults write -g CGFontRenderingFontSmoothingDisabled -bool NO
  
  # Keyrepeat
  defaults write NSGlobalDomain ApplePressAndHoldEnabled -bool false
  
  # Faster Dock
  defaults write com.apple.dock autohide-time-modifier -float 0.12;killall Dock
  defaults write com.apple.Dock autohide-delay -float 0.05; killall Dock
}

task_terminal() {
  show_info "Setting up terminal colors and prompt"
  
  touch ${HOME}/.hushlogin
 
  # Setup dotfiles
  git clone https://github.com/uloco/dotfiles.git
  ./dotfiles/setup-dotfiles.sh

  # get aliases and stuff
  source "${BASHRC}"
  
  # install powerline-shell
  pip install powerline-shell

  # set bluloco color scheme
  source "${BASHRC}"
}
