#!/usr/bin/env bash

export BASHRC="${HOME}/.bash_profile"

task_install_base() {
  show_info "Installing packages and apps"
  
  # install homebrew
  /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
  export PATH="$(brew --prefix coreutils)/libexec/gnubin:/usr/local/bin:${PATH}"

  # Configure homebrew permissions to allow multiple users on MAC OSX.
  # Any user from the admin group will be able to manage the homebrew and cask installation on the machine.
  
  # allow admins to manage homebrew's local install directory
  sudo chgrp -R admin /usr/local
  sudo chmod -R g+w /usr/local
  
  # allow admins to homebrew's local cache of formulae and source files
  if [ -e /Library/Caches/Homebrew ]; then
    sudo chgrp -R admin /Library/Caches/Homebrew
    sudo chmod -R g+w /Library/Caches/Homebrew
  fi

  brew update

  show_warning "Please install the following apps manually from the appstore first and hit Enter"
  show_warning "xcode"
  show_warning "copyclip"
  show_warning "apple configurator 2"

  read

  brew install coreutils
  brew install binutils
  brew install diffutils
  brew install ed --with-default-names
  brew install findutils --with-default-names
  brew install gawk
  brew install gnu-indent --with-default-names
  brew install gnu-sed --with-default-names
  brew install gnu-tar --with-default-names
  brew install gnu-which --with-default-names
  brew install gnutls
  brew install grep --with-default-names
  brew install gzip
  brew install screen
  brew install watch
  brew install wdiff --with-gettext
  brew install wget

  brew install bash
  brew install emacs
  brew install less
  brew install m4
  brew install make
  brew install nano

  brew install file-formula
  brew install git
  brew install openssh
  brew install perl
  brew install python
  brew install rsync
  brew install svn
  brew install unzip
  brew install vim --override-system-vi
  brew install macvim --override-system-vim --custom-system-icons
  brew install zsh
  brew install htop
  brew install docker
  brew install docker-compose

  brew install node
  brew install ansible
  
  brew cask install java8 
  brew install maven

  brew cask install dropbox
  brew cask install google-chrome
  brew cask install google-chrome-canary
  brew cask install thunderbird
  brew cask install vagrant
  brew cask install jetbrains-toolbox
  brew cask install webstorm
  brew cask install visual-studio-code
  brew cask install franz
  brew cask install virtualbox
  brew cask install docker
  brew cask install ccmenu
  brew cask install karabiner-elements
  brew cask install keyboard-maestro
  brew cask install android-sdk
  brew cask install android-studio
  brew cask install magicprefs
  brew cask install iterm2
  brew cask install spotify


}

task_git() {
  show_info "Initial git config"
  echo -n "Git Name: "
  read GIT_USER
  echo -n "Git Email: "
  read GIT_EMAIL
  echo -n "Do you want to use vim as your git editor: (Y/n) "
  read GIT_EDITOR
  git config --global user.name "$GIT_USER"
  git config --global user.email "$GIT_EMAIL"
  git config --global push.default simple
  git config --global credential.helper osxkeychain
  git config --global svn.rmdir true

  if [[ "$GIT_EDITOR" =~ [yY](es)? ]] || [ -z "$GIT_EDITOR" ]; then
    echo "Using vim as default editor"
    git config --global core.editor "vim"
  else
    echo "Keep using default editor"
  fi
  
  mkdir -p "${HOME}/.local/bin/"

  cp data/scripts/git-* "${HOME}/.local/bin/"
}

task_npm() {
  CURRENT_DIR=$(pwd);

  npm install -g \
    npm \
    vsce \
    cordova \
    ionic \
    live-server \
    typescript \
    tslint \
    tslint-config-standard >/dev/null

  npm list --global --depth 0

  cd ${CURRENT_DIR}
}

# install font source code pro

task_fonts() {
show_info "Installing missing fonts."
  tar -xzvf data/source-code-pro.tar.gz
  cp -f source-code-pro/* ~/Library/Fonts/
  rm -r source-code-pro/
}

task_folders() {
  show_info "Creating default folders"
  mkdir -pv "$HOME/Source/"
  mkdir -pv "$HOME/Software"
  mkdir -pv "$HOME/tmp"
  mkdir -pv "$HOME/Workshops"
  mkdir -pv "$HOME/Virtual Machines"
}

task_settings() {
  # TODO add macos settings here

  # Keyrepeat
  defaults write NSGlobalDomain ApplePressAndHoldEnabled -bool false

  # Faster Dock
  defaults write com.apple.dock autohide-time-modifier -float 0.12;killall Dock
  defaults write com.apple.Dock autohide-delay -float 0.05; killall Dock

  cp ./data/.vimrc ${HOME}/
  cp -r ./data/.config/* ${HOME}/.config/
  defaults import com.vladalexa.MagicPrefs ./data/magicpref.plist
  show_info "You need to import keyboard maestro macros manually from ./data/kbmaestro.kbmmacros"
  sleep 3
}

task_terminal() {
  show_info "Setting up terminal colors and prompt"

  touch ${HOME}/.hushlogin
  cat data/terminal/.bash_profile >> "${HOME}/.bash_profile"

  ln -s ~/.bash_profile ~/.bashrc

  if ! grep "${HOME}/.bash-aliases" "${BASHRC}" &>/dev/null; then
    cp data/terminal/.bash-aliases "${HOME}"
    echo -e '# Load custom bash aliases\nsource "${HOME}/.bash-aliases"\n' >> "${BASHRC}"
  fi

  if ! grep "${HOME}/.bash-prompt" "${BASHRC}" &>/dev/null; then
    cp data/terminal/.bash-prompt "${HOME}"
    echo -e '# Load custom bash prompt\nsource "${HOME}/.bash-prompt"\n' >> "${BASHRC}"
  fi

  # set bluloco color scheme
  source "${BASHRC}"
}
